Phillip Mudavanhu
Aufgabe 01
Programmierung 


Aufgabe 1.2------------------------------------

Quelle text: github : www.github.com/phillipmudavanhu



Aufgabe  1.3-----------------------------------

Losung: die kleinst Zahlen die mit 1 und 20 teilbar ist 232792560


Aufgabe  1.4-----------------------------------

int main ()
{
		int a = 9;            ......Type[Interger]    Variable[a]    Wert[9]
		bool b = false;       ......Type[Boolean]     Variable[b]    Wert[false]
		char c = ’a’;         ......Type[Charecter]   Variable[c]    Wert[a]
		double d = 1.3;       ......Type[Double]      Variable[d]    Wert[1.3]
		
		int const two = 2;    ......Type[Interger]    Constant [two] Wert[2] No changes of the value 2 once the compliled
		double e = a/two;     ......Type[Double]      Variable [e]   Wert[9/2]  (Int/Int gives an Int (Data loss))
		two = d;              ......Type[Interger]    Variable [d]   Wert[fehle meldung wegen zuwesung auf eine const Value]
	return 0;
}


Aufgabe  1.5-----------------------------------


Initialisierung : This is the process by which a complier reserves or creates memory to contain a specified Variable Type

Zuweisung        : This is a process of storing a value in an already defined (typed) storage. 

Beispiele Initialisierung : int x; int y;

Beispiele Zuweisung : x = y*y

Unterschied : the difference is that intialisation clearly difines the type of a variable and can only be done before using the varible or without using the variables created. Zuweisung can only happen after initialisation and doesn't exist without intialization first. If one tries to use an uninitialized variable the compile will give 

Aufgabe  1.6-----------------------------------


 Deklaration (manchmal auch Forward-Deklaration
genannt) und Definition und geben Sie jeweils ein Beispiel an. Welche Unterschiede
gibt es? Geben Sie Beispiele für Funktionen, Variablen und Klassen.
Hinweis: extern Variable 


Aufgabe  1.7-----------------------------------


# include <iostream>				

int var = 3;					     .....Type of Scope [Global Variable] this variable stays throught the program    

double sum (double a , double b)      
{
	return a + b ;					  .....Type of Scope [Local Variables]
}									  once the function ends the local varible in this scope dies

int square (int var)
{
	return var * var ;				 .....Type of Scope [Local Variables]
}									 this is using a local variable and once the program terminates this var dies

int main ()
	{
		for ( int i = 0; i != 100; ++ i ) {                   .....Type of Scope [Global to this Function Variables]
		std :: cout << " i ^ 2 = " << square ( i ) << "\n";   .....Type of Scope [Local Variables]
		std :: cout << " i + i = " << sum (i , i ) << "\n";   .....Type of Scope [Local Variables]
	}
	return 0;
}



Aufgabe  1.17-----------------------------------


C++					:
Quellcode			:			
complier 			:
Linker				:
Objektcode			:
Ausführbare Datei	:
main()				:
#include			:
Kommentar			:
Header				:
Programm  			:
Ausgabe				:
std::cout			:
std::cin     		:
<< 					:
>> 					:
Funktion 			:
Funktionssignatur 	:
Deklaration 		:
Definition 			:
Typ 				:
Typkonvertierung 	:
Variable 			:
Name 				:
Wert 				:
Initialisierung 	:
Zuweisung 			:
const 				:
Gültigkeitsbereich 	: 